```{r}
#import data
ASV <- read.csv("C:/Users/jacqu/Desktop/BIOSSCOPE_SizeFrac_dada2_output/BIOSSCOPE_SizeFrac_seqtab-nochimtaxa_rar8000_NoSingle.csv", header=TRUE,sep=",",row.names=1)
taxa <- read.csv("C:/Users/jacqu/Desktop/BIOSSCOPE_SizeFrac_dada2_output/BIOSSCOPE_SizeFrac_taxa_rar8000_NoSingle.csv", header=TRUE,sep=",",row.names=1, na.strings = "NOPE")
meta <- read.csv("C:/Users/jacqu/Desktop/BIOSSCOPE_SizeFrac_dada2_output/BIOSSCOPE_SizeFrac_meta_rar8000.csv", header=TRUE,sep=",",row.names=1)

#rename ASV names in ASV table from DNA string to taxonomy
taxa_num <- as.data.frame(c(1:nrow(taxa)))
taxa_concat <- str_c(taxa$Kingdom, taxa$Phylum, taxa$Class, taxa$Order, taxa$Family, taxa$Genus, taxa$Species,  taxa_num$`c(1:nrow(taxa))`, sep="_")
t_ASV <- as.data.frame(t(ASV))
colnames(t_ASV) <- taxa_concat

#wrangle the different subsets
t_ASV$Sample <- rownames(t_ASV)
t_ASV$Sample <- gsub('_','.', t_ASV$Sample)
mydata <- inner_join(meta, t_ASV, by="Sample")
rownames(mydata) <- mydata$Sample
mydata$Fraction_size_um <- as.character(mydata$Fraction_size_um)
mydata$Depth_m <- as.numeric(mydata$Depth_m)

mydata <- as.data.frame(read.csv("C:/Users/jacqu/Desktop/BIOSSCOPE_SizeFrac_dada2_output/BIOSSCOPE_SizeFrac_EnvASV_noBLANKv3.csv", row.names = 1))
mydata$Fraction_size_um <- as.character(mydata$Fraction_size_um)
all.asin <- as.matrix(asin(sqrt(mydata[,9:ncol(mydata)]/100)))

#ordinate ALL samples
ASV.bc<-as.matrix(vegdist(all.asin, method="bray"))
ALLnmds <- metaMDS(all.asin, distance = "bray")
ALL.scores = as.data.frame(scores(ALLnmds))
write.csv(ALL.scores,"BIOSSCOPE_SizeFrac_ALL_NMDSscores.csv")

  #plot with depth as color
ggplot(data = ALL.scores, 
       mapping = aes(x=NMDS1, y=NMDS2))+ 
        geom_point(size=3, alpha=0.8, aes(shape=mydata$Fraction_size_um, color=mydata$Depth_m))+ 
        ggtitle("NMDS ordination of all pump samples")+
        theme_classic(base_size = 14)+ 
        scale_color_viridis(option = "C", direction = -1)
        
AE1819 <- filter(mydata, Cruise == "AE1819")
AE1819.asin <- as.matrix(asin(sqrt(AE1819[,9:ncol(AE1819)]/100)))
AE1819.nmds <- metaMDS(AE1819.asin, distance = "bray")
AE1819.scores <- as.data.frame(scores(AE1819.nmds))
